#include <iostream>
#include <string>

// Function to validate the credit card number using Luhn Algorithm
bool validateCardNumber(const std::string& cardNumber) {
    int sum = 0;
    bool alternate = false;

    for (int i = cardNumber.length() - 1; i >= 0; i--) {
        int digit = cardNumber[i] - '0'; // Convert character to integer

        if (alternate) {
            digit *= 2; // Double every second digit
            if (digit > 9) {
                digit -= 9; // Subtract 9 if digit > 9
            }
        }

        sum += digit;
        alternate = !alternate; // Toggle alternate flag
    }

    return (sum % 10 == 0); // Valid if sum is divisible by 10
}

// Function to determine the card type based on the card number's prefix
std::string getCardType(const std::string& cardNumber) {
    if (cardNumber[0] == '4') return "Visa";
    if (cardNumber.substr(0, 2) == "34" || cardNumber.substr(0, 2) == "37") return "American Express";
    if (cardNumber.substr(0, 2) >= "51" && cardNumber.substr(0, 2) <= "55") return "Mastercard";
    if (cardNumber.substr(0, 4) == "6011") return "Discover";
    return "Unknown";
}

int main() {
    std::string cardNumber;

    // Ask user to input a credit card number
    std::cout << "Enter a credit card number to validate: ";
    std::cin >> cardNumber;

    // Check if the card number is valid
    if (validateCardNumber(cardNumber)) {
        std::cout << "The credit card number is VALID.\n";

        // Detect and display card type
        std::string cardType = getCardType(cardNumber);
        std::cout << "Card Type: " << cardType << "\n";
    } else {
        std::cout << "The credit card number is INVALID.\n";
    }

    return 0;
}